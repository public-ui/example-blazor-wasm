@page "/fetchdata"
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <kol-table 
        _caption="Weather data"
        _headers="{'horizontal': [[{'label':'Date','key':'DateText'}, {'label':'Temp. (C)','key':'TemperatureC'}, {'label':'Temp. (F)','key':'TemperatureF'}, {'label':'Summary','key':'Summary'}]]}"
        _pagination="[{'page':2}]"
        _data="@System.Text.Json.JsonSerializer.Serialize(forecasts)">
    </kol-table>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public string DateText => Date.ToString("d");

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}

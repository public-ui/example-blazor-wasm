@inject NavigationManager NavigationManager

@using System.Text.Json
@using System.Text.Json.Serialization

<div class="top-row ps-3 navbar navbar-dark">
  <div class="container-fluid">
    <a class="navbar-brand" href="">Blazor Wasm with KoliBri</a>
    <button
      title="Navigation menu"
      class="navbar-toggler"
    @onclick="ToggleNavMenu"
    >
      <span class="navbar-toggler-icon"></span>
    </button>
  </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
  <kol-nav
    _label="BlazorWasmKoliBriApp"
    _links="@JsonSerializer.Serialize(navLinks)"
  ></kol-nav>
</div>

@code {
  private List<NavLink> navLinks = new() {
    new NavLink() {    
      Href = "/",
      Icon = "fa-solid fa-house",
      Label = "Home"
    },
    new NavLink() {    
      Href = "counter",
      Icon = "fa-solid fa-stopwatch-20",
      Label = "Counter"
    },
    new NavLink() {    
      Href = "fetchdata",
      Icon = "fa-solid fa-table",
      Label = "Fetch data"
    }
  };

  private bool collapseNavMenu = true; 
  
  private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null; 
  
  private void ToggleNavMenu()
  {
    collapseNavMenu = !collapseNavMenu;
  }

  protected override void OnInitialized()
  {
    NavigationManager.LocationChanged += OnLocationChanged;
    UpdateActiveState();
  }

  public void Dispose()
  {
    NavigationManager.LocationChanged -= OnLocationChanged;
  }
  private void OnLocationChanged(object? sender, LocationChangedEventArgs args) 
  {
    UpdateActiveState();
    StateHasChanged();
  }

  private void UpdateActiveState()
  {
    foreach (var item in navLinks)
    {
      item.Active = NavigationManager.Uri.EndsWith(item.Href);
    }
  }

  public class NavLink 
  {
    [JsonPropertyName("_href")]
    public string Href { get; init; }

    [JsonPropertyName("_icon")]
    public string Icon { get; init; }

    [JsonPropertyName("_label")]
    public string Label { get; init; }

    [JsonPropertyName("_active")]
    public bool Active { get; set; }
  }
} 
